{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\d\\\\All Web Projects\\\\My Resume Builder\\\\frontend\\\\src\\\\components\\\\FormFields\\\\DatePickerField.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useField } from 'formik';\nimport Grid from '@material-ui/core/Grid';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DatePickerField(props) {\n  _s();\n\n  /*\r\n  const [field, meta, helper] = useField(props);\r\n  const { touched, error } = meta;\r\n  const { setValue } = helper;\r\n  const isError = touched && error && true;\r\n  const { value } = field;\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  */\n  const [selectedDate, setDate] = useState(moment());\n  const [inputValue, setInputValue] = useState(moment().format(\"YYYY-MM-DD\"));\n\n  const onDateChange = (date, value) => {\n    setDate(date);\n    setInputValue(value);\n  };\n\n  const dateFormatter = str => {\n    return str;\n  };\n\n  useEffect(() => {\n    if (value) {\n      const date = new Date(value);\n      setSelectedDate(date);\n    }\n  }, [value]);\n\n  function _onChange(date) {\n    if (date) {\n      setSelectedDate(date);\n\n      try {\n        const ISODateString = date.toISOString();\n        setValue(ISODateString);\n      } catch (error) {\n        setValue(date);\n      }\n    } else {\n      setValue(date);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n        autoOk: true,\n        showTodayButton: true,\n        value: selectedDate,\n        format: \"YYYY-MM-DD\",\n        inputValue: inputValue,\n        onChange: onDateChange,\n        rifmFormatter: dateFormatter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DatePickerField, \"qdVPP7KwUTWMUbY/Y6i5FXYVRs8=\");\n\n_c = DatePickerField;\n\nvar _c;\n\n$RefreshReg$(_c, \"DatePickerField\");","map":{"version":3,"sources":["C:/Users/d/All Web Projects/My Resume Builder/frontend/src/components/FormFields/DatePickerField.jsx"],"names":["React","useState","useEffect","useField","Grid","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","moment","DatePickerField","props","selectedDate","setDate","inputValue","setInputValue","format","onDateChange","date","value","dateFormatter","str","Date","setSelectedDate","_onChange","ISODateString","toISOString","setValue","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SACEC,uBADF,EAEEC,kBAFF,QAGO,sBAHP;AAIA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC7C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAEE,QAAM,CAACC,YAAD,EAAeC,OAAf,IAA0BX,QAAQ,CAACO,MAAM,EAAP,CAAxC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAACO,MAAM,GAAGO,MAAT,CAAgB,YAAhB,CAAD,CAA5C;;AAEA,QAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpCN,IAAAA,OAAO,CAACK,IAAD,CAAP;AACAH,IAAAA,aAAa,CAACI,KAAD,CAAb;AACD,GAHD;;AAKA,QAAMC,aAAa,GAAGC,GAAG,IAAI;AAC3B,WAAOA,GAAP;AACD,GAFD;;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,KAAJ,EAAW;AACT,YAAMD,IAAI,GAAG,IAAII,IAAJ,CAASH,KAAT,CAAb;AACAI,MAAAA,eAAe,CAACL,IAAD,CAAf;AACD;AACF,GALQ,EAKN,CAACC,KAAD,CALM,CAAT;;AAOA,WAASK,SAAT,CAAmBN,IAAnB,EAAyB;AACvB,QAAIA,IAAJ,EAAU;AACRK,MAAAA,eAAe,CAACL,IAAD,CAAf;;AACA,UAAI;AACF,cAAMO,aAAa,GAAGP,IAAI,CAACQ,WAAL,EAAtB;AACAC,QAAAA,QAAQ,CAACF,aAAD,CAAR;AACD,OAHD,CAGE,OAAOG,KAAP,EAAc;AACdD,QAAAA,QAAQ,CAACT,IAAD,CAAR;AACD;AACF,KARD,MAQO;AACLS,MAAAA,QAAQ,CAACT,IAAD,CAAR;AACD;AACF;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA,2BACE,QAAC,uBAAD;AAAyB,MAAA,KAAK,EAAEV,YAAhC;AAAA,6BACA,QAAC,kBAAD;AACI,QAAA,MAAM,EAAE,IADZ;AAEI,QAAA,eAAe,EAAE,IAFrB;AAGI,QAAA,KAAK,EAAEI,YAHX;AAII,QAAA,MAAM,EAAC,YAJX;AAKI,QAAA,UAAU,EAAEE,UALhB;AAMI,QAAA,QAAQ,EAAEG,YANd;AAOI,QAAA,aAAa,EAAEG;AAPnB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA1DuBV,e;;KAAAA,e","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useField } from 'formik';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport moment from 'moment';\r\n\r\nexport default function DatePickerField(props) {\r\n  /*\r\n  const [field, meta, helper] = useField(props);\r\n  const { touched, error } = meta;\r\n  const { setValue } = helper;\r\n  const isError = touched && error && true;\r\n  const { value } = field;\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  */\r\n\r\n  const [selectedDate, setDate] = useState(moment());\r\n  const [inputValue, setInputValue] = useState(moment().format(\"YYYY-MM-DD\"));\r\n\r\n  const onDateChange = (date, value) => {\r\n    setDate(date);\r\n    setInputValue(value);\r\n  };\r\n\r\n  const dateFormatter = str => {\r\n    return str;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (value) {\r\n      const date = new Date(value);\r\n      setSelectedDate(date);\r\n    }\r\n  }, [value]);\r\n\r\n  function _onChange(date) {\r\n    if (date) {\r\n      setSelectedDate(date);\r\n      try {\r\n        const ISODateString = date.toISOString();\r\n        setValue(ISODateString);\r\n      } catch (error) {\r\n        setValue(date);\r\n      }\r\n    } else {\r\n      setValue(date);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <KeyboardDatePicker\r\n          autoOk={true}\r\n          showTodayButton={true}\r\n          value={selectedDate}\r\n          format=\"YYYY-MM-DD\"\r\n          inputValue={inputValue}\r\n          onChange={onDateChange}\r\n          rifmFormatter={dateFormatter}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    </Grid>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}