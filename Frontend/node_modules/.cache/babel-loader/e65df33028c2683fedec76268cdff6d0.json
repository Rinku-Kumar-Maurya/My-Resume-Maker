{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\d\\\\All Web Projects\\\\My Resume Builder\\\\frontend\\\\src\\\\components\\\\Resume\\\\Resume.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Stepper, Step, StepLabel, Button, Typography, CircularProgress } from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport Profile from './Forms/Profile';\nimport Education from './Forms/Education';\nimport Projects from './Forms/Projects';\nimport Experience from './Forms/Experience';\nimport Extras from './Forms/Extras';\nimport CreatedSuccess from './CreatedSuccess';\nimport validationSchema from './FormModel/validationSchema';\nimport resumeFormModel from './FormModel/resumeFormModel';\nimport formInitialValues from './FormModel/formInitialValues';\nimport useStyles from './styles';\nimport { func } from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = ['Profile', 'Education', 'Projects', 'Experience', 'Extras'];\nconst {\n  formId,\n  formField\n} = resumeFormModel;\n\nfunction _renderStepContent(step) {\n  switch (step) {\n    case 0:\n      return /*#__PURE__*/_jsxDEV(Profile, {\n        formField: formField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 20\n      }, this);\n\n    case 1:\n      return /*#__PURE__*/_jsxDEV(Education, {\n        formField: formField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }, this);\n\n    case 2:\n      return /*#__PURE__*/_jsxDEV(Projects, {\n        formField: formField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n\n    case 3:\n      return /*#__PURE__*/_jsxDEV(Experience, {\n        formField: formField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }, this);\n\n    case 4:\n      return /*#__PURE__*/_jsxDEV(Extras, {\n        formField: formField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this);\n  }\n}\n\nexport default function Resume() {\n  _s();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const currValidationSchema = validationSchema[activeStep];\n  const isLastStep = activeStep === steps.length - 1;\n\n  function _sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  async function _submitForm(values, actions) {\n    await _sleep(1000);\n    alert(JSON.stringify(values, null, 2));\n    actions.setSubmitting(false);\n    setActiveStep(activeStep + 1);\n  }\n\n  function _handleSubmit(values, actions) {\n    if (isLastStep) {\n      _submitForm(values, actions);\n    } else {\n      setActiveStep(activeStep + 1);\n      actions.setTouched({});\n      actions.setSubmitting(false);\n    }\n  }\n\n  function _handleBack() {\n    setActiveStep(activeStep - 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h1\",\n      variant: \"h4\",\n      align: \"center\",\n      children: \"Make Resumesssssss\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      className: classes.stepper,\n      children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n        children: /*#__PURE__*/_jsxDEV(StepLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(CreatedSuccess, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: formInitialValues,\n        validationSchema: currValidationSchema,\n        onSubmit: _handleSubmit,\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          id: formId,\n          children: [_renderStepContent(activeStep), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.button,\n            children: [activeStep !== 0 && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: _handleBack,\n              callName: calles.button,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.wrapper,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: isSubmitting,\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                className: classes.button,\n                children: isLastStep ? 'Submit Details' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 41\n              }, this), isSubmitting && /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                className: classes.buttonProgress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Resume, \"5/ANSN4aidVPv0P4apAyeUUfwXQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Resume;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resume\");","map":{"version":3,"sources":["C:/Users/d/All Web Projects/My Resume Builder/frontend/src/components/Resume/Resume.jsx"],"names":["React","useState","Stepper","Step","StepLabel","Button","Typography","CircularProgress","Formik","Form","Profile","Education","Projects","Experience","Extras","CreatedSuccess","validationSchema","resumeFormModel","formInitialValues","useStyles","func","steps","formId","formField","_renderStepContent","step","Resume","classes","activeStep","setActiveStep","currValidationSchema","isLastStep","length","_sleep","ms","Promise","resolve","setTimeout","_submitForm","values","actions","alert","JSON","stringify","setSubmitting","_handleSubmit","setTouched","_handleBack","stepper","map","label","isSubmitting","button","calles","wrapper","buttonProgress"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    Button,\r\n    Typography,\r\n    CircularProgress\r\n} from '@material-ui/core';\r\nimport { Formik, Form } from 'formik';\r\n\r\nimport Profile from './Forms/Profile';\r\nimport Education from './Forms/Education';\r\nimport Projects from './Forms/Projects';\r\nimport Experience from './Forms/Experience';\r\nimport Extras from './Forms/Extras';\r\nimport CreatedSuccess from './CreatedSuccess';\r\n\r\nimport validationSchema from './FormModel/validationSchema';\r\nimport resumeFormModel from './FormModel/resumeFormModel';\r\nimport formInitialValues from './FormModel/formInitialValues';\r\n\r\nimport useStyles from './styles';\r\nimport { func } from 'prop-types';\r\n\r\nconst steps = ['Profile', 'Education', 'Projects', 'Experience', 'Extras'];\r\nconst {formId, formField} = resumeFormModel;\r\n\r\nfunction _renderStepContent(step) {\r\n    switch (step) {\r\n        case 0:\r\n            return <Profile formField={formField} />;\r\n        case 1:\r\n            return <Education formField={formField} />;\r\n        case 2:\r\n            return <Projects formField={formField} />;\r\n        case 3:\r\n            return <Experience formField={formField} />;\r\n        case 4:\r\n            return <Extras formField={formField} />;\r\n        default:\r\n            return <div>Not Found</div>;\r\n    }\r\n}\r\n\r\nexport default function Resume() {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const currValidationSchema = validationSchema[activeStep];\r\n    const isLastStep = activeStep === steps.length - 1;\r\n\r\n    function _sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    async function _submitForm(values, actions) {\r\n        await _sleep(1000);\r\n        alert(JSON.stringify(values, null, 2));\r\n        actions.setSubmitting(false);\r\n\r\n        setActiveStep(activeStep + 1);\r\n    }\r\n\r\n    function _handleSubmit(values, actions) {\r\n        if(isLastStep){\r\n            _submitForm(values, actions);\r\n        }\r\n        else{\r\n            setActiveStep(activeStep + 1);\r\n            actions.setTouched({});\r\n            actions.setSubmitting(false);\r\n        }\r\n    }\r\n\r\n    function _handleBack() {\r\n        setActiveStep(activeStep - 1);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                Make Resumesssssss\r\n            </Typography>\r\n            <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                {steps.map(label => (\r\n                    <Step key={label}>\r\n                        <StepLabel>{label}</StepLabel>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            <React.Fragment>\r\n                {activeStep === steps.length ? (\r\n                    <CreatedSuccess />\r\n                ) : (\r\n                    <Formik \r\n                        initialValues={formInitialValues}\r\n                        validationSchema={currValidationSchema}\r\n                        onSubmit={_handleSubmit}\r\n                    >\r\n                        {({ isSubmitting }) => (\r\n                            <Form id={formId}>\r\n                                {_renderStepContent(activeStep)}\r\n\r\n                                <div className={classes.button}>\r\n                                    {activeStep !== 0 && (\r\n                                        <Button onClick={_handleBack} callName={calles.button}>\r\n                                            Back\r\n                                        </Button>\r\n                                    )}\r\n                                    <div className={classes.wrapper}>\r\n                                        <Button\r\n                                            disabled={isSubmitting}\r\n                                            type=\"submit\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                        >\r\n                                            {isLastStep ? 'Submit Details' : 'Next'}\r\n                                        </Button>\r\n                                        {isSubmitting && (\r\n                                            <CircularProgress\r\n                                            size={24}\r\n                                            className={classes.buttonProgress}\r\n                                            />\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                )} \r\n            </React.Fragment>\r\n        </React.Fragment>\r\n    );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}